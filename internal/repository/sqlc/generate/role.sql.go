// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: role.sql

package repository

import (
	"context"
)

const addRole = `-- name: AddRole :exec
INSERT INTO users_role (user_id, role) VALUES ($1, $2)
`

type AddRoleParams struct {
	UserID string
	Role   int32
}

func (q *Queries) AddRole(ctx context.Context, arg AddRoleParams) error {
	_, err := q.db.ExecContext(ctx, addRole, arg.UserID, arg.Role)
	return err
}

const deleteRole = `-- name: DeleteRole :exec
DELETE FROM users_role WHERE user_id = $1
`

func (q *Queries) DeleteRole(ctx context.Context, userID string) error {
	_, err := q.db.ExecContext(ctx, deleteRole, userID)
	return err
}

const getRole = `-- name: GetRole :one
SELECT (role) FROM users_role WHERE user_id = $1
`

func (q *Queries) GetRole(ctx context.Context, userID string) (int32, error) {
	row := q.db.QueryRowContext(ctx, getRole, userID)
	var role int32
	err := row.Scan(&role)
	return role, err
}
