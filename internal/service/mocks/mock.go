// Code generated by MockGen. DO NOT EDIT.
// Source: product.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	DTO "example1/internal/DTO"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProductService is a mock of ProductService interface.
type MockProductService struct {
	ctrl     *gomock.Controller
	recorder *MockProductServiceMockRecorder
}

// MockProductServiceMockRecorder is the mock recorder for MockProductService.
type MockProductServiceMockRecorder struct {
	mock *MockProductService
}

// NewMockProductService creates a new mock instance.
func NewMockProductService(ctrl *gomock.Controller) *MockProductService {
	mock := &MockProductService{ctrl: ctrl}
	mock.recorder = &MockProductServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductService) EXPECT() *MockProductServiceMockRecorder {
	return m.recorder
}

// FreeReservation mocks base method.
func (m *MockProductService) FreeReservation(reservations *DTO.ReqFreeReservation) (*DTO.ResFreeReservation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FreeReservation", reservations)
	ret0, _ := ret[0].(*DTO.ResFreeReservation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FreeReservation indicates an expected call of FreeReservation.
func (mr *MockProductServiceMockRecorder) FreeReservation(reservations interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FreeReservation", reflect.TypeOf((*MockProductService)(nil).FreeReservation), reservations)
}

// Reserve mocks base method.
func (m *MockProductService) Reserve(reservation *DTO.ReqReserveProduct) (*DTO.ResReserveProduct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reserve", reservation)
	ret0, _ := ret[0].(*DTO.ResReserveProduct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Reserve indicates an expected call of Reserve.
func (mr *MockProductServiceMockRecorder) Reserve(reservation interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reserve", reflect.TypeOf((*MockProductService)(nil).Reserve), reservation)
}
